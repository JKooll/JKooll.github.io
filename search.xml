<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Github+Hexo+Next创建自己的博客]]></title>
      <url>http://JKooll.github.io/2016/10/03/create-blog-with-github/</url>
      <content type="html"><![CDATA[<p>这是搭建完这个博客写的第一篇文章，就简单总结一些搭建这个博客的过程。</p>
<h2 id="Github–建仓"><a href="#Github–建仓" class="headerlink" title="Github–建仓"></a>Github–建仓</h2><p>首先要在github上注册一个账号(<a href="https://github.com/join" target="_blank" rel="external">https://github.com/join</a>),<br><img src="../images/002.png" alt=""><br>然后登陆，新建一个git仓(<a href="https://github.com/new)，" target="_blank" rel="external">https://github.com/new)，</a><br><img src="../images/001.png" alt=""><br>Repository name填写you_username.github.io,Description为博客描述(可写)，确定填写无误之后<br>点击Create repository，git仓就创建完成了。</p>
<h2 id="Hexo–博客"><a href="#Hexo–博客" class="headerlink" title="Hexo–博客"></a>Hexo–博客</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，<br>即可利用靓丽的主题生成静态网页。<br>安装hexo需要Nodejs和Git(可参考<a href="https://hexo.io/zh-cn/docs/index.html)，通过" target="_blank" rel="external">https://hexo.io/zh-cn/docs/index.html)，通过</a><br><code>$ npm install -g hexo-cli</code>即可安装hexo，然后根据hexo<br><a href="https://hexo.io/zh-cn/docs/setup.html文档即可创建自己的博客了。" target="_blank" rel="external">https://hexo.io/zh-cn/docs/setup.html文档即可创建自己的博客了。</a></p>
<h2 id="next–主题"><a href="#next–主题" class="headerlink" title="next–主题"></a>next–主题</h2><p>如果你对hexo自带的主题不满意可以在你的博客根目录下的themes/下添加自己喜欢的<br>主题。比较推荐的是next(<a href="http://theme-next.iissnan.com/)，官网上有详细的安装和使用" target="_blank" rel="external">http://theme-next.iissnan.com/)，官网上有详细的安装和使用</a><br>文档，这里就不写了，如果你对这个主题不满意可以去这里看一下，挑选自己满意的安装上去就可以了。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>最后就是讲博客部署到github上去了，可以参考一下这个(<a href="https://hexo.io/zh-cn/docs/deployment.html)，" target="_blank" rel="external">https://hexo.io/zh-cn/docs/deployment.html)，</a></p>
<ul>
<li>安装 hexo-deployer-git<br><code>$ npm install hexo-deployer-git –save</code></li>
<li>配置_config.yml<br>打开博客根目录下的_config.yml，找到deploy,将配置修改为<br><code><pre><code>deploy:
type: git
repo: &lt;repository url&gt;//刚才建的git仓url，可在clone下找到
branch: [branch]//分支
message: [message]//commit信息
</code></pre></code><br>配置完成之后就可以通过下面三步部署博客了</li>
<li>hexo clean</li>
<li>hexo generate</li>
<li>hexo deploy<br>##完成<br>打开your_username.github.io看一下你的博客吧。 </li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[flysystem中集成SCS（新浪云存储）]]></title>
      <url>http://JKooll.github.io/2016/10/03/flysystem-with-SCS/</url>
      <content type="html"><![CDATA[<p>原文链接:<a href="http://www.jianshu.com/p/b07bdcd236b8" target="_blank" rel="external">http://www.jianshu.com/p/b07bdcd236b8</a></p>
<p>注：本文使用的是laravel 5.2</p>
<p>laravel自带的flysystem驱动除了本地磁盘存储驱动，还有两个云存储驱动Amazon S3、以及 Rackspace，但是这两个由于种种原因导致国内访问速度比较慢，我经常使用SCS访问速度比较稳定，本文就如何在laravel中安装SCS驱动展开讨论。</p>
<p>##材料：</p>
<p>laravel 5.2（其他版本暂未测试）</p>
<p>SCS SDK</p>
<p>##步骤：</p>
<p>1.下载安装SCS SDK</p>
<p>2.创建Adapter</p>
<p>3.创建驱动</p>
<p>3.修改flysystem配置文件，添加SCS驱动</p>
<p>4.测试</p>
<p>##正文：</p>
<p>在laravel中集成SCS，需要一个Adapter和一个storage类，Adapter是作为适配器类似于接口的类，storage用来实现SCS操作.</p>
<p>首先安装SCS SDK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer require cloudmario/scs dev-master</div></pre></td></tr></table></figure>
<p>安装完之后<br>打开    <code>{项目的根目录}/vendor/cloudmario/scs/class</code>    里面有两个文件SCS.php和SCSWrapper.php<br>现在我们现在需要的是SCS.php.<br>在刚才打开的<code>{项目的根目录}/vendor/cloudmario/scs/class</code>文件夹中创建一个SCSAdapter适配器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">use League\Flysystem\Adapter\AbstractAdapter;</div><div class="line">use League\Flysystem\Config;</div><div class="line">use League\Flysystem\Util;</div><div class="line"></div><div class="line">class SCSAdapter extends AbstractAdapter</div><div class="line">&#123;</div><div class="line">    //</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里面需要写的方法一会讲到Filesystem时再说。<br>接下来接下来就是创建驱动，其实驱动就是一个ServiceProvider,我们就按照创建ServiceProvider的方法创建一个SCSFilesystemServiceProvider.<br>下面是我创建 SCSFilesystemServiceProvider的代码，当然创建的位置无所谓，只要能加载上就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan make:provider SCSFilesystemServiceProvider</div></pre></td></tr></table></figure></p>
<p>然后将服务注册一下，在config/app.php中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&apos;providers&apos; =&gt; [</div><div class="line">    //...</div><div class="line">    App\Providers\SCSFilesystemServiceProvider::class,</div><div class="line">    //...</div><div class="line">]</div></pre></td></tr></table></figure></p>
<p>接下来是写一下驱动，这个在文档里面有描述，我在这里只是写一下关于SCS的，不明白的可以点<a href="http://laravel-china.org/docs/5.1/filesystem#自定义文件系统" target="_blank" rel="external">这里</a>.<br>费话不多说，直接上代码.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">namespace App\Providers;</div><div class="line"></div><div class="line">use Illuminate\Session\FileSessionHandler;</div><div class="line">use Storage;</div><div class="line">use League\Flysystem\Filesystem;</div><div class="line">use SCS;</div><div class="line">use SCSAdapter;</div><div class="line">use Illuminate\Support\ServiceProvider;</div><div class="line"></div><div class="line">class SCSFilesystemServiceProvider extends ServiceProvider</div><div class="line">&#123;</div><div class="line">    /**</div><div class="line">     * Bootstrap the application services.</div><div class="line">     *</div><div class="line">     * @return void</div><div class="line">     */</div><div class="line">    public function boot()</div><div class="line">    &#123;</div><div class="line">        Storage::extend(&apos;scs&apos;, function($app, $config)&#123; </div><div class="line">           $client = new SCS($config[&apos;accessKey&apos;], $config[&apos;secretKey&apos;]);</div><div class="line">            return new Filesystem(new SCSAdapter($client, $config[&apos;bucket&apos;]));</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * Register the application services.</div><div class="line">     *</div><div class="line">     * @return void</div><div class="line">     */</div><div class="line">    public function register()</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;&#125;</div></pre></td></tr></table></figure></p>
<p>注意这里要把刚才创建的SCSAdapter以及刚才安装的SCS.php引入进来，这里我用的是use SCS和use SCSAdapter，可以根据实际情况自己写，出错可不管哦。<br>在SCSFilesystemServiceProvider的boot方法中定义SCS驱动，这里格式和文档中一样，不明白可以参考文档，然后注意这里Storage::extend中的闭包函数要求必须返回League\Flysystem\Filesystem的实例，这就是刚才我没说的，在SCSAdapter中要实现的方法的线索，从Filesystem的源代码可以看出，调用云存储驱动的过程大概是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Storage::disk(&apos;scs&apos;) -----&gt; Filesystem::Method -----&gt; SCSAdapter::Method -----&gt; SCSStorage::Method</div></pre></td></tr></table></figure></p>
<p>上面只是一个示意图，而且如果配置正确的话Storage::disk(‘scs’)返回的已经是驱动为SCS的Filesystem实例，有些地方表述的有些歧义，不过能明白意思就行，这里就不做过深的讨论了。<br>从上面可以知道其实我们不是直接调用SCSAdapter，而是通过Filesystem封装成统一接口之后调用的，文档中也有说明，这样我们只要将Filesystem类中的方法实现以下就行了.<br>下面是我列出的可能需要在SCSAdapter中实现的方法：（下面代码有点长，后面还有一点内容^_^，别错过哦）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div></pre></td><td class="code"><pre><div class="line">protected $storage;</div><div class="line">    protected $bucket;</div><div class="line"></div><div class="line">    public function __construct(SCS $client, $bucket)</div><div class="line">    &#123;</div><div class="line">        $this-&gt;storage = $client;</div><div class="line">        $this-&gt;bucket = $bucket;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Check whether a file exists.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|bool|null</div><div class="line">     */</div><div class="line">    public function has($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Read a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function read($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Read a file as a stream.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function readStream($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * List contents of a directory.</div><div class="line">     *</div><div class="line">     * @param string $directory</div><div class="line">     * @param bool   $recursive</div><div class="line">     *</div><div class="line">     * @return array</div><div class="line">     */</div><div class="line">    public function listContents($directory = &apos;&apos;, $recursive = false)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Get all the meta data of a file or directory.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function getMetadata($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Get all the meta data of a file or directory.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function getSize($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Get the mimetype of a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function getMimetype($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Get the timestamp of a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function getTimestamp($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Get the visibility of a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function getVisibility($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /////////////////////////////////////////////////////</div><div class="line">    /**</div><div class="line">     * @const  VISIBILITY_PUBLIC  public visibility</div><div class="line">     */</div><div class="line">    const VISIBILITY_PUBLIC = &apos;public&apos;;</div><div class="line">    /**</div><div class="line">     * @const  VISIBILITY_PRIVATE  private visibility</div><div class="line">     */</div><div class="line">    const VISIBILITY_PRIVATE = &apos;private&apos;;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Write a new file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     * @param string $contents</div><div class="line">     * @param Config $config   Config object</div><div class="line">     *</div><div class="line">     * @return array|false false on failure file meta data on success</div><div class="line">     */</div><div class="line">    public function write($path, $contents, Config $config)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Write a new file using a stream.</div><div class="line">     *</div><div class="line">     * @param string   $path</div><div class="line">     * @param resource $resource</div><div class="line">     * @param Config   $config   Config object</div><div class="line">     *</div><div class="line">     * @return array|false false on failure file meta data on success</div><div class="line">     */</div><div class="line">    public function writeStream($path, $resource, Config $config)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Update a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     * @param string $contents</div><div class="line">     * @param Config $config   Config object</div><div class="line">     *</div><div class="line">     * @return array|false false on failure file meta data on success</div><div class="line">     */</div><div class="line">    public function update($path, $contents, Config $config)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Update a file using a stream.</div><div class="line">     *</div><div class="line">     * @param string   $path</div><div class="line">     * @param resource $resource</div><div class="line">     * @param Config   $config   Config object</div><div class="line">     *</div><div class="line">     * @return array|false false on failure file meta data on success</div><div class="line">     */</div><div class="line">    public function updateStream($path, $resource, Config $config)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Rename a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     * @param string $newpath</div><div class="line">     *</div><div class="line">     * @return bool</div><div class="line">     */</div><div class="line">    public function rename($path, $newpath)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Copy a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     * @param string $newpath</div><div class="line">     *</div><div class="line">     * @return bool</div><div class="line">     */</div><div class="line">    public function copy($path, $newpath)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Delete a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     *</div><div class="line">     * @return bool</div><div class="line">     */</div><div class="line">    public function delete($path)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Delete a directory.</div><div class="line">     *</div><div class="line">     * @param string $dirname</div><div class="line">     *</div><div class="line">     * @return bool</div><div class="line">     */</div><div class="line">    public function deleteDir($dirname)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Create a directory.</div><div class="line">     *</div><div class="line">     * @param string $dirname directory name</div><div class="line">     * @param Config $config</div><div class="line">     *</div><div class="line">     * @return array|false</div><div class="line">     */</div><div class="line">    public function createDir($dirname, Config $config)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * Set the visibility for a file.</div><div class="line">     *</div><div class="line">     * @param string $path</div><div class="line">     * @param string $visibility</div><div class="line">     *</div><div class="line">     * @return array|false file meta data</div><div class="line">     */</div><div class="line">    public function setVisibility($path, $visibility)</div><div class="line">    &#123;</div><div class="line">        //</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>要想调用SCS云存储，还差一步就是在config/filesystem.php中添加SCS配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&apos;disks&apos; =&gt; [</div><div class="line">//...</div><div class="line"></div><div class="line">&apos;scs&apos; =&gt; [</div><div class="line">    &apos;driver&apos; =&gt; &apos;scs&apos;,</div><div class="line">    &apos;accessKey&apos; =&gt; &apos;your-accessKey&apos;,</div><div class="line">    &apos;secretKey&apos; =&gt; &apos;your-secretKey&apos;,</div><div class="line">    &apos;bucket&apos; =&gt; &apos;your-bucket&apos;,</div><div class="line">],</div><div class="line"></div><div class="line">//...</div><div class="line">]</div></pre></td></tr></table></figure></p>
<p>下面是我的测试结果：<br>获取我的bucket中的内容列表</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2754701-178b4e80c70ac4b6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
]]></content>
    </entry>
    
  
  
</search>

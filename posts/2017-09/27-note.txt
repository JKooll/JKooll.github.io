# 玩扫雷的正确姿势

## WHAT
最近又入了扫雷的坑，扫雷算是一款非常经典的小游戏。虽然从小玩到大，但是由于游戏设计的十分巧妙，导致我
只能在初级和中级徘徊（好吧，我承认自己不会玩）。由于现在windows已经不自带这些小游戏了，我就从网上找到了一款
在线的扫雷游戏，它长这个样：

![](posts/2017-09/27-note/01.png)

然后，开开心心的开始游戏了，额。。。：

![](posts/2017-09/27-note/02.png)

此处省略2的n+1次尝试，我还能说什么。
我虽然不是专业的前端程序员，但还是在好奇心的驱使下打开了console panel，说明一下我用的
是chrome浏览器，所以下面的所有测试都是在chrome下进行的，如果你要用其他浏览器或者工具，请自行尝试。
我先查看了这个网站的资源:

![](posts/2017-09/27-note/03.png)

注意到这个里面有一个minesweeper.min.js，很明显这个就是扫雷游戏的代码文件，查看完这个文件之后发现里面是
经过压缩的，代码美化一下还是很简单的：
```js
function Minesweeper(w, p)
{
    //some game methods
} 
```
上面就是扫雷游戏的代码结构，没错就是这个，但是这里只定义了函数并没有任何调用代码，没有调用当然不能玩游戏了(
其实我先去我先找到了存储整个扫雷棋盘的数组，但是苦于从外部获取不到这个数组，就决定换一种方法)，
接着我又扫视了一眼资源目录，发现只有(index)那个里面有可能调用，很明显这个文件是后端生成的，但是并不影响我们
看代码，这个文件里面是一堆HTML代码，在head标签里面我找到了调用Minesweeper创建游戏的js代码，这段代码中给
Minesweeper的第二个参数传递了一个readOptions，找到readOptions发现这是一个有返回值的函数，要是一个回调函数
还有可能直接把存储扫雷棋盘的数组打印出来，在readOptions函数里面有这么一段代码：

![](posts/2017-09/27-note/04.png)

这个函数返回的是一个数组，里面存放着关于游戏的一些设置，我注意到里面有这么一个参数numMines，很明显这个表示
游戏中雷的数量，下面思路就很简单了，只要把numMines改成任意我们想要的值就可以了。

## HOW
这里有两个方法修改numMines，第一种是修改(index)中的numMines，第二种是在head中添加和源文件中一样的创建
游戏代码，但是这个代码的numMines和之前的不一样。我采用的是第二种方法，原因就是我在破解完游戏之后才想到
为什么不直接修改原来的代码，额，尴尬，不过采用什么方法无所谓只要达到想要的效果就可以了。为了更方便的
操作，写了一个chrome插件：

![](posts/2017-09/27-note/06.gif)